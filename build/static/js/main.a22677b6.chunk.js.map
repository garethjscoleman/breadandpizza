{"version":3,"sources":["Components/BreadNavbar/breadNavbar.js","Services/doughCalc.js","Components/quanitiesAndTimes/quantitiesAndTimes.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["BreadNavbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","navExpanded","setNavExpanded","bind","assertThisInitialized","closeNav","selectedKey","alert","concat","expanded","setState","_this2","react_default","a","createElement","Navbar","collapseOnSelect","Header","Brand","href","Toggle","Collapse","Nav","onSelect","key","handleSelect","activeKey","NavDropdown","eventKey","title","id","MenuItem","divider","NavItem","Component","doughCalc","temperature","startermass","doughmass","timeinMinutes","Math","pow","log2","round","QuantitiesAndTimes","context","calcTimeToRise","doughProps","proofingtimes","firstrisetime","secondrisetime","fridgetemperature","inroom","infridge","timeToRise","desiredDateTime","Date","parse","desiredDate","desiredTime","_unused","isNaN","baketime","type","mass","time","bakeTime","breadType","roomstart","toLocaleString","roomshape","fridgestart","fridgeshape","roomplusfridgestart","roomplusfridgeshape","fridgeplusroomstart","fridgeplusroomshape","getValidationState","theQuantity","quantity","theSize","size","theTemp","theFridgeTemp","theStarterMass","theDoughMass","handleChange","handleSizeChange","handleWantedTimeChange","handleWantedDateChange","handleFridgeChange","handleTempChange","setDesiredStartTime","handleStarterChange","theDate","setHours","getHours","handleChangesToDoughRiseTime","theTimetoStart","dd","getDate","mm","getMonth","sDay","getFullYear","sTime","getMinutes","newdoughmass","number","pizzatype","thicknessfactor","pizzaMass","newstartermass","e","target","value","FormGroup","controlId","validationState","ControlLabel","FormControl","placeholder","onChange","min","max","step","Feedback","HelpBlock","React","App","gridInstance","Grid","Row","className","Col","xs","md","mdPush","mdPull","BreadNavbar_breadNavbar","quantitiesAndTimes","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.a22677b6.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport { Navbar } from 'react-bootstrap';\nimport { Nav } from 'react-bootstrap';\nimport { NavItem } from 'react-bootstrap';\nimport { NavDropdown } from 'react-bootstrap';\nimport { MenuItem } from 'react-bootstrap';\n\nimport './breadNavbar.css';\n\nclass BreadNavbar extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {navExpanded: true}\n    this.setNavExpanded = this.setNavExpanded.bind(this);\n    this.closeNav = this.closeNav.bind(this);\n      }\n\n\n  handleSelect(selectedKey) {\n    alert(`selected ${selectedKey}`);\n  }\n  \n  setNavExpanded(expanded) {\n    this.setState({ navExpanded: expanded });\n  }\n\n  closeNav() {\n    this.setState({ navExpanded: false });\n  }\n\n    render() {\n\nreturn (\n\n  <Navbar collapseOnSelect  >\n    <Navbar.Header>\n      <Navbar.Brand>\n        <a href=\"#home\">Bread and Pizza</a>\n      </Navbar.Brand>\n      <Navbar.Toggle/>\n    </Navbar.Header>\n    \n    <Navbar.Collapse >\n      <Nav \n        onSelect={key => this.handleSelect(key)}\n        activeKey={1} >\n        <NavDropdown eventKey={3} title=\"Bread\" id=\"basic-nav-dropdown\">\n          <MenuItem eventKey={3.1}>Starter</MenuItem>\n          <MenuItem eventKey={3.2}>Dough</MenuItem>\n          <MenuItem eventKey={3.3}>Proof</MenuItem>\n          <MenuItem eventKey={3.4}>Shaping</MenuItem>\n          <MenuItem eventKey={3.5}>Second Rise</MenuItem>\n          <MenuItem eventKey={3.6}>Baking</MenuItem>\n          <MenuItem divider />\n          <MenuItem eventKey={3.7}>Rolls</MenuItem>\n          <MenuItem eventKey={3.8}>Loaf</MenuItem>\n        </NavDropdown>\n        <NavItem eventKey={1} href=\"#pizza\">\n          Pizza\n        </NavItem>\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>);\n  \n  }\n}\n\nexport default BreadNavbar;","export function doughCalc(temperature,startermass,doughmass) {\n\n\n    var timeinMinutes = 0;\n    if (temperature<4 || temperature>35 || startermass<1 || startermass>5000 || doughmass<1 || doughmass>5000 )\n    {\n        //hmm something funny going on \n        return 1;\n    }\n    //timeinMinutes = 45/(Math.pow(2,((35-this.state.temperature)/7))*(1+Math.log2(0.5)-Math.log2(this.state.startermass/this.state.doughmass)));\n    timeinMinutes = (45)/(1/(Math.pow(2,((35-temperature)/7))*(1+Math.log2(0.5)-Math.log2(startermass/doughmass))));\n    \n    return Math.round(timeinMinutes);\n\n\n}\n\nexport function  pizzaMass(size,number,pizzatype)\n{\n    var thicknessfactor = 1;\n    switch (pizzatype) {\n        case 'chicago': \n        case 'deeppan': \n            thicknessfactor= 2;            \n                break;\n        case 'napoletana':\n        case 'romano': \n            thicknessfactor= 1;            \n            break;\n    \n        default:\n            thicknessfactor= 1;\n            break;\n    }\n    //A 9 inch pizza with thin base (romano?)  should be made from 225g dough\n    var pizzamass = number*thicknessfactor * (size*size/81)*225 ; \n    return pizzamass;\n\n}\n\nexport function  bakeTime(type,mass)\n{\n    var time = 0;\n    switch (type) {\n        case 'chicago': \n        case 'deeppan': \n            time =10;            \n                break;\n        case 'napoletana':\n        case 'romano': \n            time=7;            \n            break;\n        case 'roundloaf': \n            time=  ((Math.pow(mass,1/3))/10)*40;            \n            break;\n        case 'flatloaf': \n            time=((Math.pow(mass,1/3))/5)*40;            \n            break;\n        case 'ovalloaf': \n            time =((Math.pow(mass,1/3))/7)*40;            \n            break;\n        case 'smallbuns': \n            time= 15;            \n            break;\n        case 'largebuns': \n            time= 20;            \n            break;\n        default:\n            time= 30;\n            break;\n    }\n    return 60*1000 * time;\n }","import React, { Component } from 'react';\nimport { FormGroup } from 'react-bootstrap';\nimport { ControlLabel } from 'react-bootstrap';\nimport { FormControl } from 'react-bootstrap';\nimport { HelpBlock } from 'react-bootstrap';\nimport { doughCalc } from './../../Services/doughCalc';\nimport { pizzaMass } from './../../Services/doughCalc';\nimport { bakeTime } from './../../Services/doughCalc';\n\nclass QuantitiesAndTimes extends React.Component {\n    constructor(props, context) {\n      super(props, context);\n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handleSizeChange = this.handleSizeChange.bind(this);\n      this.handleWantedTimeChange = this.handleWantedTimeChange.bind(this);\n      this.handleWantedDateChange = this.handleWantedDateChange.bind(this);\n      this.handleFridgeChange = this.handleFridgeChange.bind(this);\n      this.handleTempChange = this.handleTempChange.bind(this);\n      this.setDesiredStartTime = this.setDesiredStartTime.bind(this);\n      this.handleStarterChange = this.handleStarterChange.bind(this);\n\n      \n      \n      this.state = {\n        breadType: 'roundloaf',\n        baketime:0,\n        quantity : 1,\n        size : 9,\n        temperature : 17,\n        fridgetemperature : 5,\n        startermass : 200,\n        doughmass : 250,\n        desiredDate: '1999-12-31',\n        desiredTime: '23:59',\n        desiredDateTime : 0,\n        roomstart: 0 ,\n        fridgestart : 0,\n        roomplusfridgestart:0,\n        roomplusfridgeshape:0,\n        fridgeplusroomstart:0,\n        fridgeplusroomshape:0,\n        proofingtimes : {\n          inroom : 0,\n          infridge : 0\n        },\n        timeToRise:0\n      };\n\n      \n\n\n    }\n    componentDidMount() {\n\n      var theDate = new Date();\n      theDate.setHours( theDate.getHours()+6);\n      var doughProps = this.state;\n      debugger;\n      doughProps = this.setDesiredStartTime(theDate, doughProps);\n      doughProps = this.handleChangesToDoughRiseTime(doughProps);\n      this.setState(doughProps);\n    }\n  \n \n    setDesiredStartTime(theTimetoStart, doughProps){\n      \n      //we need a point a bit in the future - try 6 hours \n      //today = today.addHours(6);\n\n      var dd = theTimetoStart.getDate();\n      var mm = theTimetoStart.getMonth() + 1; //January is 0!      \n      var yyyy = theTimetoStart.getFullYear();\n      var HH = theTimetoStart.getHours();\n      var nn = theTimetoStart.getMinutes();\n\n      if (dd < 10) {\n        dd = '0' + dd;\n      } \n      if (mm < 10) {\n        mm = '0' + mm;\n      } \n      var sDay =  yyyy + '-' + mm + '-' + dd ;\n      var sTime = HH + ':'+ nn;\n      doughProps.desiredDate =  sDay;\n      doughProps.desiredTime = sTime ;\n      return doughProps;\n\n    }\n\n\n   \n\n    calcTimeToRise = function(doughProps){\n      var proofingtimes = doughProps.proofingtimes;\n      var firstrisetime = doughCalc(doughProps.temperature,doughProps.startermass,doughProps.doughmass);\n      var secondrisetime = doughCalc(doughProps.fridgetemperature,doughProps.startermass,doughProps.doughmass); \n      doughProps.proofingtimes.inroom = firstrisetime;\n      doughProps.proofingtimes.infridge = secondrisetime ;\n      doughProps.timeToRise = firstrisetime+secondrisetime ;\n      try {\n        doughProps.desiredDateTime = Date.parse(doughProps.desiredDate + ' ' + doughProps.desiredTime);\n      }\n      catch\n      {\n        doughProps.desiredDateTime = 0;\n      } \n      if (isNaN(doughProps.desiredDateTime))\n      {\n        doughProps.desiredDateTime = 0;\n      } \n      else\n      {\n         \n        doughProps.baketime = bakeTime(doughProps.breadType,doughProps.doughmass);\n        doughProps.roomstart =  (new Date(doughProps.desiredDateTime - doughProps.baketime - (2*doughProps.proofingtimes.inroom*(60*1000)))).toLocaleString();\n        doughProps.roomshape = (new Date(doughProps.desiredDateTime - doughProps.baketime -  (doughProps.proofingtimes.inroom*(60*1000)))).toLocaleString();\n        doughProps.fridgestart =  (new Date(doughProps.desiredDateTime - doughProps.baketime - (2*doughProps.proofingtimes.infridge*(60*1000)))).toLocaleString();\n        doughProps.fridgeshape =  (new Date(doughProps.desiredDateTime - doughProps.baketime -  (doughProps.proofingtimes.infridge*(60*1000)))).toLocaleString();\n        doughProps.roomplusfridgestart =  (new Date(doughProps.desiredDateTime - doughProps.baketime - ((doughProps.proofingtimes.infridge+doughProps.proofingtimes.inroom)*(60*1000)))).toLocaleString();\n        doughProps.roomplusfridgeshape = (new Date(doughProps.desiredDateTime - doughProps.baketime -  (doughProps.proofingtimes.inroom*(60*1000)))).toLocaleString();\n        doughProps.fridgeplusroomstart = doughProps.roomplusfridgestart; \n        doughProps.fridgeplusroomshape =  (new Date(doughProps.desiredDateTime - doughProps.baketime - (doughProps.proofingtimes.infridge*(60*1000)))).toLocaleString();\n\n\n      }\n      return doughProps;\n    }\n\n    \n\n     getValidationState = function() {\n      const theQuantity = this.state.quantity;\n      if (theQuantity < 1) return 'error';\n      else if (theQuantity > 5000) return 'error';\n      const theSize = this.state.size;\n      if (theSize < 1) return 'error';\n      else if (theSize > 5000) return 'error';\n      const theTemp = this.state.temperature;\n      if (theTemp < 1) return 'error';\n      else if (theTemp > 35) return 'error';\n      const theFridgeTemp = this.state.fridgetemperature;\n      if (theFridgeTemp < 1) return 'error';\n      else if (theFridgeTemp > 35) return 'error';      \n      const theStarterMass = this.state.startermass;\n      if (theStarterMass < 1) return 'error';\n      else if (theStarterMass > 50000) return 'error';      \n      const theDoughMass = this.state.doughmass;\n      if (theDoughMass < 1) return 'error';\n      else if (theDoughMass > 50000) return 'error';\n      else return 'success';      \n    }\n\n    handleChangesToDoughRiseTime(doughProps){\n      var newdoughmass = pizzaMass( doughProps.size, doughProps.quantity, 'napoletana' ) ; \n      if (newdoughmass>1)\n      {\n        doughProps.doughmass = newdoughmass;  \n        var startermass = doughProps.startermass;\n        if (startermass> 0.5* newdoughmass ){\n          var newstartermass = 0.5* newdoughmass;\n          if (newstartermass>1)\n          {\n            doughProps.startermass = newstartermass;\n          }\n\n        }                \n        doughProps = this.calcTimeToRise(doughProps);\n      }\n      return doughProps;\n\n    }\n\n  \n    handleChange(e) {\n      var doughProps = this.state;\n      doughProps.quantity = e.target.value; \n      doughProps = this.handleChangesToDoughRiseTime(doughProps);\n      this.setState(doughProps);\n      \n\n    }\n    handleSizeChange(e) {\n      var doughProps = this.state;\n      doughProps.size = e.target.value; \n      doughProps = this.handleChangesToDoughRiseTime(doughProps);\n      this.setState(doughProps);\n\n    }\n    handleStarterChange(e) {\n      var doughProps = this.state;\n      doughProps.startermass = e.target.value;\n      doughProps = this.handleChangesToDoughRiseTime(doughProps);\n      this.setState(doughProps);\n    }\n    handleWantedTimeChange(e) {\n      var doughProps = this.state;\n      doughProps.desiredTime = e.target.value;\n      doughProps = this.handleChangesToDoughRiseTime(doughProps);\n      this.setState(doughProps);\n    }\n    handleWantedDateChange(e) {\n      var doughProps = this.state;\n      doughProps.desiredDate = e.target.value;\n      doughProps = this.handleChangesToDoughRiseTime(doughProps);\n      this.setState(doughProps);\n    }\n    handleFridgeChange(e) {\n      var doughProps = this.state;\n      doughProps.fridgetemperature = e.target.value;\n      doughProps = this.handleChangesToDoughRiseTime(doughProps);\n      this.setState(doughProps);\n    }\n    handleTempChange(e) {\n      var doughProps = this.state;\n      doughProps.temperature = e.target.value;\n      doughProps = this.handleChangesToDoughRiseTime(doughProps);\n      this.setState(doughProps);\n    }\n\n    render() {\n      return (\n        <form>\n          <FormGroup\n            controlId=\"formPizzaQantities\"\n            validationState={this.getValidationState()}>\n            <ControlLabel>How Many Pizza's do you want?</ControlLabel>\n            <FormControl\n              type=\"number\"\n              value={this.state.quantity}\n              placeholder=\"Enter how many you want\"\n              onChange={this.handleChange}\n              min=\"1\" max=\"5000\"\n              step=\"1\"\n            />\n            <FormControl.Feedback />\n            <HelpBlock>This has to be a number between 1 and 5000.</HelpBlock>\n            <ControlLabel>How big should they be</ControlLabel>\n            <FormControl\n              type=\"number\"\n              value={this.state.size}\n              placeholder=\"Enter how many you want\"\n              onChange={this.handleSizeChange}\n              min=\"7\" max=\"18\"\n              step=\"2\"\n            />\n            <FormControl.Feedback />\n            <HelpBlock>This has to be a number between 7 and 18 inches.</HelpBlock>\n            <HelpBlock>This is total mass of dough we need {(this.state.size*this.state.size/81)*this.state.quantity*225}g</HelpBlock>\n            <ControlLabel>How Much Starter do you have?</ControlLabel>\n            <FormControl\n              type=\"number\"\n              value={this.state.startermass}\n              placeholder=\"Enter how much starter mass you think we can use\"\n              onChange={this.handleStarterChange}\n              min=\"10\" max=\"5000\"\n              step=\"1\"\n            />\n            <FormControl.Feedback />\n            <HelpBlock>This has to be a number between 10 and 5000.</HelpBlock>\n\n\n            <ControlLabel>Which day do you want it</ControlLabel>\n            <FormControl\n              type=\"date\"\n              value={this.state.desiredDate}\n              placeholder=\"When do you want it ?\"\n              onChange={this.handleWantedDateChange}\n            />\n            <FormControl.Feedback />\n            <HelpBlock>This has to be a date .</HelpBlock>\n            <ControlLabel>When do you want it?</ControlLabel>\n            <FormControl\n              type=\"time\"\n              value={this.state.desiredTime}\n              placeholder=\"When do you want it ?\"\n              onChange={this.handleWantedTimeChange}\n            />\n            \n\n            <FormControl.Feedback />\n            <HelpBlock>This has to be a time .</HelpBlock>\n            <ControlLabel>How warm is the room?</ControlLabel>\n            <FormControl\n              type=\"number\"\n              value={this.state.temperature}\n              placeholder=\"Enter the room temp in Centigrade\"\n              onChange={this.handleTempChange}\n              min=\"4\" max=\"35\"\n              step=\"1\"\n            />\n            <FormControl.Feedback />\n            <HelpBlock>This has to be a number between 4 and 35.</HelpBlock>\n            <ControlLabel>How cold is the fridge?</ControlLabel>\n            <FormControl\n              type=\"number\"\n              value={this.state.fridgetemperature}\n              placeholder=\"Enter how many you want\"\n              onChange={this.handleFridgeChange}\n              min=\"4\" max=\"35\"\n              step=\"1\"\n            />\n            <FormControl.Feedback />\n            <HelpBlock>This has to be a number between 4 and 35.</HelpBlock>\n\n          <h2>Baking Time</h2>\n          Approx {(Math.round(this.state.baketime/60000))} for {(this.state.breadType)} of this size\n          <h2>In Room</h2>\n            Time of room rise is:  {(this.state.proofingtimes.inroom)} mins.(that is about {(Math.round(this.state.proofingtimes.inroom/6)/10)} hours )<br/>\n            Start at {(this.state.roomstart)}, with a shape around {(this.state.roomshape)} to achive the desired time in the room<br/>\n          <h2>In Fridge</h2>\n            Time of fridge rise is:  {(this.state.proofingtimes.infridge)} mins. (that is about {(Math.round(this.state.proofingtimes.infridge/6)/10)} hours )<br/>\n            Start at {(this.state.fridgestart)}, with a shape around {(this.state.fridgeshape)} to achive the desired time in the fridge<br/>\n          <h2>Fridge, then Room </h2>\n            Start at {(this.state.roomplusfridgestart)}, with a shape around {(this.state.roomplusfridgeshape)} <br/>\n          <h2>Room, then Fridge </h2>\n          Start at {(this.state.fridgeplusroomstart)}, with a shape around {(this.state.fridgeplusroomshape)} <br/>\n\n\n\n            Mass of starter is {(this.state.startermass)} g\n          </FormGroup>\n        </form>\n      );\n    }\n  }\n  \n  export default QuantitiesAndTimes;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { Grid } from 'react-bootstrap';\nimport { Row } from 'react-bootstrap';\nimport { Col } from 'react-bootstrap';\nimport { Clearfix } from 'react-bootstrap';\nimport BreadNavbar from './Components/BreadNavbar/breadNavbar';\nimport QuantitiesAndTimes from './Components/quanitiesAndTimes/quantitiesAndTimes';\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n\n  const dummySentences = 'Lorem ipsum dolor sit amet, consectetuer adipiscing elit,  Donec hendrerit tempor tellus.\\\n    Donec pretium posuere tellus.\\\n    Proin quam nisl, tincidunt et, mattis eget, convallis nec, purus.\\\n    Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.\\\n    Nulla posuere.\\\n    Donec vitae dolor.\\\n    Nullam tristique diam non turpis.\\\n    Cras placerat accumsan nulla.\\\n    Nullam rutrum.\\\n    Nam vestibulum accumsan nisl.';\n    \n    \n  const gridInstance = (\n\n    <Grid>\n  <Row className=\"show-grid\">\n    <Col xs={12} md={8}>\n    </Col>\n    <Col xs={6} md={4}>\n    </Col>\n  </Row>\n\n \n\n  \n  <Row className=\"show-grid\">\n    <Col md={6} mdPush={6}>\n    </Col>\n    <Col md={6} mdPull={6}>\n    </Col>\n  </Row>\n  </Grid>);\n\n\n\n  \n    return (\n      <div className=\"App\">\n         <BreadNavbar navExpanded='true'/>\n         <QuantitiesAndTimes/>\n        {gridInstance}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}