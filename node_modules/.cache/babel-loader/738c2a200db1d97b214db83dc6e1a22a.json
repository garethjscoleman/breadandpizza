{"ast":null,"code":"import _classCallCheck from \"/home/garethjscoleman/bread pizza/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/garethjscoleman/bread pizza/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/garethjscoleman/bread pizza/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/garethjscoleman/bread pizza/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/garethjscoleman/bread pizza/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/garethjscoleman/bread pizza/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/garethjscoleman/bread pizza/src/Components/quantitiesAndTimes/quantitiesAndTimes.js\";\nimport React, { Component } from 'react';\nimport { FormGroup, ControlLabel, FormControl, HelpBlock } from 'react-bootstrap';\nimport DisplayQuantitiesTimesTab from './../displayQuantitiesTimesTab/displayQuantitiesTimesTab';\nimport { doughCalc } from './../../Services/doughCalc';\nimport { pizzaMass } from './../../Services/doughCalc';\nimport { bakeTime } from './../../Services/doughCalc';\nimport ReactDOM from 'react-dom';\nimport InputRange from 'react-input-range';\nimport \"react-input-range/lib/css/index.css\";\n\nvar QuantitiesAndTimes =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(QuantitiesAndTimes, _React$Component);\n\n  function QuantitiesAndTimes(props, context) {\n    var _this;\n\n    _classCallCheck(this, QuantitiesAndTimes);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuantitiesAndTimes).call(this, props, context));\n\n    _this.calcTimeToRise = function (doughProps) {\n      var proofingtimes = doughProps.proofingtimes;\n      var firstrisetime = doughCalc(doughProps.temperature, doughProps.startermass, doughProps.doughmass);\n      var secondrisetime = doughCalc(doughProps.fridgetemperature, doughProps.startermass, doughProps.doughmass);\n      doughProps.proofingtimes.inroom = firstrisetime;\n      doughProps.proofingtimes.infridge = secondrisetime;\n      doughProps.timeToRise = firstrisetime + secondrisetime;\n\n      try {\n        doughProps.desiredDateTime = Date.parse(doughProps.desiredDate + ' ' + doughProps.desiredTime);\n      } catch (_unused) {\n        doughProps.desiredDateTime = 0;\n      }\n\n      if (isNaN(doughProps.desiredDateTime)) {\n        doughProps.desiredDateTime = 0;\n      } else {\n        doughProps.baketime = bakeTime(doughProps.breadType, doughProps.doughmass);\n        doughProps.roomstart = new Date(doughProps.desiredDateTime - doughProps.baketime - 2 * doughProps.proofingtimes.inroom * (60 * 1000)).toLocaleString();\n        doughProps.roomshape = new Date(doughProps.desiredDateTime - doughProps.baketime - doughProps.proofingtimes.inroom * (60 * 1000)).toLocaleString();\n        doughProps.fridgestart = new Date(doughProps.desiredDateTime - doughProps.baketime - 2 * doughProps.proofingtimes.infridge * (60 * 1000)).toLocaleString();\n        doughProps.fridgeshape = new Date(doughProps.desiredDateTime - doughProps.baketime - doughProps.proofingtimes.infridge * (60 * 1000)).toLocaleString();\n        doughProps.roomplusfridgestart = new Date(doughProps.desiredDateTime - doughProps.baketime - (doughProps.proofingtimes.infridge + doughProps.proofingtimes.inroom) * (60 * 1000)).toLocaleString();\n        doughProps.roomplusfridgeshape = new Date(doughProps.desiredDateTime - doughProps.baketime - doughProps.proofingtimes.inroom * (60 * 1000)).toLocaleString();\n        doughProps.fridgeplusroomstart = doughProps.roomplusfridgestart;\n        doughProps.fridgeplusroomshape = new Date(doughProps.desiredDateTime - doughProps.baketime - doughProps.proofingtimes.infridge * (60 * 1000)).toLocaleString();\n      }\n\n      return doughProps;\n    };\n\n    _this.getValidationState = function () {\n      var theQuantity = this.state.quantity;\n      if (theQuantity < 1) return 'error';else if (theQuantity > 5000) return 'error';\n      var theSize = this.state.size;\n      if (theSize < 1) return 'error';else if (theSize > 5000) return 'error';\n      var theTemp = this.state.temperature;\n      if (theTemp < 1) return 'error';else if (theTemp > 35) return 'error';\n      var theFridgeTemp = this.state.fridgetemperature;\n      if (theFridgeTemp < 1) return 'error';else if (theFridgeTemp > 35) return 'error';\n      var theStarterMass = this.state.startermass;\n      if (theStarterMass < 1) return 'error';else if (theStarterMass > 50000) return 'error';\n      var theDoughMass = this.state.doughmass;\n      if (theDoughMass < 1) return 'error';else if (theDoughMass > 50000) return 'error';else return 'success';\n    };\n\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSizeChange = _this.handleSizeChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleWantedTimeChange = _this.handleWantedTimeChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleWantedDateChange = _this.handleWantedDateChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFridgeChange = _this.handleFridgeChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleTempChange = _this.handleTempChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.setDesiredStartTime = _this.setDesiredStartTime.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleStarterChange = _this.handleStarterChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleMassChange = _this.handleMassChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      breadType: props.breadType,\n      baketime: 0,\n      quantity: 1,\n      size: 9,\n      temperature: 17,\n      fridgetemperature: 5,\n      startermass: 100,\n      doughmass: 250,\n      desiredDate: '1999-12-31',\n      desiredTime: '23:59',\n      desiredDateTime: 0,\n      roomstart: 0,\n      fridgestart: 0,\n      roomplusfridgestart: 0,\n      roomplusfridgeshape: 0,\n      fridgeplusroomstart: 0,\n      fridgeplusroomshape: 0,\n      proofingtimes: {\n        inroom: 0,\n        infridge: 0\n      },\n      timeToRise: 0\n    };\n    return _this;\n  }\n\n  _createClass(QuantitiesAndTimes, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var theDate = new Date();\n      theDate.setHours(theDate.getHours() + 6);\n      var doughProps = this.state;\n      doughProps = this.setDesiredStartTime(theDate, doughProps);\n      doughProps = this.handleChangesToDoughRiseTime(doughProps);\n      this.setState(doughProps);\n    }\n  }, {\n    key: \"setDesiredStartTime\",\n    value: function setDesiredStartTime(theTimetoStart, doughProps) {\n      //we need a point a bit in the future - try 6 hours \n      //today = today.addHours(6);\n      var dd = theTimetoStart.getDate();\n      var mm = theTimetoStart.getMonth() + 1; //January is 0!      \n\n      var yyyy = theTimetoStart.getFullYear();\n      var HH = theTimetoStart.getHours();\n      var nn = theTimetoStart.getMinutes();\n\n      if (dd < 10) {\n        dd = '0' + dd;\n      }\n\n      if (mm < 10) {\n        mm = '0' + mm;\n      }\n\n      if (HH < 10) {\n        HH = '0' + HH;\n      }\n\n      if (nn < 10) {\n        nn = '0' + nn;\n      }\n\n      var sDay = yyyy + '-' + mm + '-' + dd;\n      var sTime = HH + ':' + nn;\n      doughProps.desiredDate = sDay;\n      doughProps.desiredTime = sTime;\n      return doughProps;\n    }\n  }, {\n    key: \"handleChangesToDoughRiseTime\",\n    value: function handleChangesToDoughRiseTime(doughProps) {\n      var newdoughmass;\n\n      if (doughProps.breadType === \"pizza\") {\n        newdoughmass = pizzaMass(doughProps.size, doughProps.quantity, 'napoletana');\n      } else {\n        newdoughmass = doughProps.doughmass;\n      }\n\n      if (newdoughmass > 1) {\n        doughProps.doughmass = newdoughmass;\n        var startermass = doughProps.startermass;\n\n        if (startermass > 0.5 * newdoughmass) {\n          var newstartermass = 0.5 * newdoughmass;\n\n          if (newstartermass > 1) {\n            doughProps.startermass = newstartermass;\n          }\n        }\n\n        doughProps = this.calcTimeToRise(doughProps);\n      }\n\n      return doughProps;\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(value) {\n      var doughProps = this.state;\n      doughProps.quantity = value;\n      doughProps = this.handleChangesToDoughRiseTime(doughProps);\n      this.setState(doughProps);\n    }\n  }, {\n    key: \"handleSizeChange\",\n    value: function handleSizeChange(value) {\n      var doughProps = this.state;\n      doughProps.size = value;\n      doughProps = this.handleChangesToDoughRiseTime(doughProps);\n      this.setState(doughProps);\n    }\n  }, {\n    key: \"handleMassChange\",\n    value: function handleMassChange(value) {\n      var doughProps = this.state;\n      doughProps.size = 9;\n      doughProps.quantity = value / 225;\n      doughProps.doughmass = value;\n      doughProps = this.handleChangesToDoughRiseTime(doughProps);\n      this.setState(doughProps);\n    }\n  }, {\n    key: \"handleStarterChange\",\n    value: function handleStarterChange(value) {\n      var doughProps = this.state;\n      doughProps.startermass = value;\n      doughProps = this.handleChangesToDoughRiseTime(doughProps);\n      this.setState(doughProps);\n    }\n  }, {\n    key: \"handleWantedTimeChange\",\n    value: function handleWantedTimeChange(e) {\n      var doughProps = this.state;\n      doughProps.desiredTime = e.target.value;\n      doughProps = this.handleChangesToDoughRiseTime(doughProps);\n      this.setState(doughProps);\n    }\n  }, {\n    key: \"handleWantedDateChange\",\n    value: function handleWantedDateChange(e) {\n      var doughProps = this.state;\n      doughProps.desiredDate = e.target.value;\n      doughProps = this.handleChangesToDoughRiseTime(doughProps);\n      this.setState(doughProps);\n    }\n  }, {\n    key: \"handleFridgeChange\",\n    value: function handleFridgeChange(value) {\n      var doughProps = this.state;\n      doughProps.fridgetemperature = value;\n      doughProps = this.handleChangesToDoughRiseTime(doughProps);\n      this.setState(doughProps);\n    }\n  }, {\n    key: \"handleTempChange\",\n    value: function handleTempChange(value) {\n      var doughProps = this.state;\n      doughProps.temperature = value;\n      doughProps = this.handleChangesToDoughRiseTime(doughProps);\n      this.setState(doughProps);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var breadType = this.props.breadType;\n      var doughProps = this.state;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        className: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        controlId: \"formPizzaQantities\",\n        validationState: this.getValidationState(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, breadType === \"pizza\" ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"How Many Pizza's do you want?  \", this.state.breadType === \"pizza\"), React.createElement(InputRange, {\n        formatMinLabel: function formatMinLabel(value) {\n          return \" Min \".concat(value, \" \");\n        },\n        formatMaxLabel: function formatMaxLabel(value) {\n          return \" Max \".concat(value, \" \");\n        },\n        step: 1,\n        maxValue: 15,\n        minValue: 1,\n        value: this.state.quantity,\n        onChange: function onChange(quantity) {\n          _this2.setState({\n            quantity: quantity\n          });\n\n          _this2.handleChange(quantity);\n        },\n        onChangeComplete: function onChangeComplete(value) {\n          return console.log(value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }), React.createElement(HelpBlock, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"This has to be a number between 1 and 5000.\"), React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"How big should they be\"), React.createElement(InputRange, {\n        formatMinLabel: function formatMinLabel(value) {\n          return \" Min \".concat(value, \" \");\n        },\n        formatMaxLabel: function formatMaxLabel(value) {\n          return \" Max \".concat(value, \" \");\n        },\n        step: 1,\n        maxValue: 11,\n        minValue: 7,\n        value: this.state.size,\n        onChange: function onChange(size) {\n          _this2.setState({\n            size: size\n          });\n\n          _this2.handleSizeChange(size);\n        },\n        onChangeComplete: function onChangeComplete(value) {\n          return console.log(value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }), React.createElement(HelpBlock, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \"This has to be a number between 7 and 18 inches.\")) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, \"How large do you want your loaf?\"), React.createElement(InputRange, {\n        formatLabel: function formatLabel(value) {\n          return \"\".concat(value, \" g\");\n        },\n        formatMinLabel: function formatMinLabel(value) {\n          return \"Min \".concat(value, \" g\");\n        },\n        formatMaxLabel: function formatMaxLabel(value) {\n          return \"Max \".concat(value, \" g\");\n        },\n        step: 50,\n        maxValue: 3000,\n        minValue: 250,\n        value: this.state.doughmass,\n        onChange: function onChange(doughmass) {\n          _this2.setState({\n            doughmass: doughmass\n          });\n\n          _this2.handleMassChange(doughmass);\n        },\n        onChangeComplete: function onChangeComplete(value) {\n          return console.log(value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }), React.createElement(FormControl, {\n        type: \"number\",\n        value: this.state.doughmass,\n        placeholder: \"Enter how large do you want your loaf\",\n        onChange: this.handleMassChange,\n        min: \"100\",\n        max: \"5000\",\n        step: \"25\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }), React.createElement(FormControl.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }), React.createElement(HelpBlock, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, \"This has to be a number between 1 and 5000.\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, \" This is total mass of dough we need \", this.state.size * this.state.size / 81 * this.state.quantity * 225, \"g\"), React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \"How Much Starter do you have?\"), React.createElement(InputRange, {\n        formatMinLabel: function formatMinLabel(value) {\n          return \" Min \".concat(value, \" g\");\n        },\n        formatMaxLabel: function formatMaxLabel(value) {\n          return \" Max \".concat(value, \" g\");\n        },\n        step: 1,\n        maxValue: this.state.doughmass / 2,\n        minValue: 0,\n        value: this.state.startermass,\n        onChange: function onChange(startermass) {\n          _this2.setState({\n            startermass: startermass\n          });\n\n          _this2.handleStarterChange(startermass);\n        },\n        onChangeComplete: function onChangeComplete(value) {\n          return console.log(value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }), React.createElement(FormControl, {\n        type: \"number\",\n        value: this.state.startermass,\n        placeholder: \"Enter how much starter mass you think we can use\",\n        onChange: this.handleStarterChange,\n        min: \"10\",\n        max: \"5000\",\n        step: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }), React.createElement(FormControl.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }), React.createElement(HelpBlock, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, \"This has to be a number between 10 and 5000.\"), React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, \"Which day do you want it\"), React.createElement(FormControl, {\n        type: \"date\",\n        value: this.state.desiredDate,\n        placeholder: \"When do you want it ?\",\n        onChange: this.handleWantedDateChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }), React.createElement(FormControl.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }), React.createElement(HelpBlock, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, \"This has to be a date .\"), React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, \"When do you want it?\"), React.createElement(FormControl, {\n        type: \"time\",\n        value: this.state.desiredTime,\n        placeholder: \"When do you want it ?\",\n        onChange: this.handleWantedTimeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }), React.createElement(FormControl.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }), React.createElement(HelpBlock, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, \"This has to be a time .\"), React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, \"How warm is the room?\"), React.createElement(InputRange, {\n        formatMinLabel: function formatMinLabel(value) {\n          return \" Min \".concat(value, \" g\");\n        },\n        formatMaxLabel: function formatMaxLabel(value) {\n          return \" Max \".concat(value, \" g\");\n        },\n        step: 1,\n        maxValue: 35,\n        minValue: 0,\n        value: this.state.temperature,\n        onChange: function onChange(temperature) {\n          _this2.setState({\n            temperature: temperature\n          });\n\n          _this2.handleTempChange(temperature);\n        },\n        onChangeComplete: function onChangeComplete(value) {\n          return console.log(value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }), React.createElement(FormControl, {\n        type: \"number\",\n        value: this.state.temperature,\n        placeholder: \"Enter the room temp in Centigrade\",\n        onChange: this.handleTempChange,\n        min: \"4\",\n        max: \"35\",\n        step: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }), React.createElement(FormControl.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }), React.createElement(HelpBlock, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, \"This has to be a number between 4 and 35.\"), React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, \"How cold is the fridge?\"), React.createElement(InputRange, {\n        formatMinLabel: function formatMinLabel(value) {\n          return \" Min \".concat(value, \" g\");\n        },\n        formatMaxLabel: function formatMaxLabel(value) {\n          return \" Max \".concat(value, \" g\");\n        },\n        step: 1,\n        maxValue: 35,\n        minValue: 0,\n        value: this.state.fridgetemperature,\n        onChange: function onChange(fridgetemperature) {\n          _this2.setState({\n            fridgetemperature: fridgetemperature\n          });\n\n          _this2.handleFridgeChange(fridgetemperature);\n        },\n        onChangeComplete: function onChangeComplete(value) {\n          return console.log(value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }), React.createElement(FormControl, {\n        type: \"number\",\n        value: this.state.fridgetemperature,\n        placeholder: \"Enter how many you want\",\n        onChange: this.handleFridgeChange,\n        min: \"4\",\n        max: \"35\",\n        step: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }), React.createElement(FormControl.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }), React.createElement(HelpBlock, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, \"This has to be a number between 4 and 35.\")), React.createElement(DisplayQuantitiesTimesTab, {\n        fridgeplusroomshape: this.state.fridgeplusroomshape,\n        roomplusfridgeshape: this.state.roomplusfridgeshape,\n        doughmass: this.state.doughmass,\n        startermass: this.state.startermass,\n        baketime: this.state.baketime,\n        breadType: this.state.breadType,\n        infridge: this.state.proofingtimes.infridge,\n        fridgestart: this.state.fridgestart,\n        fridgeshape: this.state.fridgeshape,\n        roomshape: this.state.roomshape,\n        roomstart: this.state.roomstart,\n        inroom: this.state.proofingtimes.inroom,\n        roomplusfridgestart: this.state.roomplusfridgestart,\n        fridgeplusroomstart: this.state.fridgeplusroomstart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return QuantitiesAndTimes;\n}(React.Component);\n\nexport default QuantitiesAndTimes;","map":{"version":3,"sources":["/home/garethjscoleman/bread pizza/src/Components/quantitiesAndTimes/quantitiesAndTimes.js"],"names":["React","Component","FormGroup","ControlLabel","FormControl","HelpBlock","DisplayQuantitiesTimesTab","doughCalc","pizzaMass","bakeTime","ReactDOM","InputRange","QuantitiesAndTimes","props","context","calcTimeToRise","doughProps","proofingtimes","firstrisetime","temperature","startermass","doughmass","secondrisetime","fridgetemperature","inroom","infridge","timeToRise","desiredDateTime","Date","parse","desiredDate","desiredTime","isNaN","baketime","breadType","roomstart","toLocaleString","roomshape","fridgestart","fridgeshape","roomplusfridgestart","roomplusfridgeshape","fridgeplusroomstart","fridgeplusroomshape","getValidationState","theQuantity","state","quantity","theSize","size","theTemp","theFridgeTemp","theStarterMass","theDoughMass","handleChange","bind","handleSizeChange","handleWantedTimeChange","handleWantedDateChange","handleFridgeChange","handleTempChange","setDesiredStartTime","handleStarterChange","handleMassChange","theDate","setHours","getHours","handleChangesToDoughRiseTime","setState","theTimetoStart","dd","getDate","mm","getMonth","yyyy","getFullYear","HH","nn","getMinutes","sDay","sTime","newdoughmass","newstartermass","value","e","target","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { FormGroup, ControlLabel, FormControl, HelpBlock}  from 'react-bootstrap';\nimport DisplayQuantitiesTimesTab from './../displayQuantitiesTimesTab/displayQuantitiesTimesTab'; \nimport { doughCalc } from './../../Services/doughCalc';\nimport { pizzaMass } from './../../Services/doughCalc';\nimport { bakeTime } from './../../Services/doughCalc';\n\nimport ReactDOM from 'react-dom';\nimport InputRange from 'react-input-range';\nimport \"react-input-range/lib/css/index.css\"\n\nclass QuantitiesAndTimes extends React.Component {\n    constructor(props, context) {\n      super(props, context);\n      \n      this.handleChange = this.handleChange.bind(this);\n      this.handleSizeChange = this.handleSizeChange.bind(this);\n      this.handleWantedTimeChange = this.handleWantedTimeChange.bind(this);\n      this.handleWantedDateChange = this.handleWantedDateChange.bind(this);\n      this.handleFridgeChange = this.handleFridgeChange.bind(this);\n      this.handleTempChange = this.handleTempChange.bind(this);\n      this.setDesiredStartTime = this.setDesiredStartTime.bind(this);\n      this.handleStarterChange = this.handleStarterChange.bind(this);\n      this.handleMassChange = this.handleMassChange.bind(this);\n      \n      \n      this.state = {\n        breadType: props.breadType,\n        baketime:0,\n        quantity : 1,\n        size : 9,\n        temperature : 17,\n        fridgetemperature : 5,\n        startermass : 100,\n        doughmass : 250,\n        desiredDate: '1999-12-31',\n        desiredTime: '23:59',\n        desiredDateTime : 0,\n        roomstart: 0 ,\n        fridgestart : 0,\n        roomplusfridgestart:0,\n        roomplusfridgeshape:0,\n        fridgeplusroomstart:0,\n        fridgeplusroomshape:0,\n        proofingtimes : {\n          inroom : 0,\n          infridge : 0\n        },\n        timeToRise:0,\n       \n      };\n\n      \n\n\n    }\n    componentDidMount() {\n      \n      var theDate = new Date();\n      theDate.setHours( theDate.getHours()+6);\n      \n      var doughProps = this.state;\n      doughProps = this.setDesiredStartTime(theDate, doughProps);\n      doughProps = this.handleChangesToDoughRiseTime(doughProps);\n      this.setState(doughProps);\n    }\n  \n \n    setDesiredStartTime(theTimetoStart, doughProps){\n      \n      //we need a point a bit in the future - try 6 hours \n      //today = today.addHours(6);\n\n      var dd = theTimetoStart.getDate();\n      var mm = theTimetoStart.getMonth() + 1; //January is 0!      \n      var yyyy = theTimetoStart.getFullYear();\n      var HH = theTimetoStart.getHours();\n      var nn = theTimetoStart.getMinutes();\n\n      if (dd < 10) {\n        dd = '0' + dd;\n      } \n      if (mm < 10) {\n        mm = '0' + mm;\n      } \n      if (HH < 10) {\n        HH = '0' + HH;\n      } \n      if (nn < 10) {\n        nn = '0' + nn;\n      } \n      var sDay =  yyyy + '-' + mm + '-' + dd ;\n      var sTime = HH + ':'+ nn;\n      doughProps.desiredDate =  sDay;\n      doughProps.desiredTime = sTime ;\n      return doughProps;\n\n    }\n\n\n   \n\n    calcTimeToRise = function(doughProps){\n      var proofingtimes = doughProps.proofingtimes;\n      var firstrisetime = doughCalc(doughProps.temperature,doughProps.startermass,doughProps.doughmass);\n      var secondrisetime = doughCalc(doughProps.fridgetemperature,doughProps.startermass,doughProps.doughmass); \n      doughProps.proofingtimes.inroom = firstrisetime;\n      doughProps.proofingtimes.infridge = secondrisetime ;\n      doughProps.timeToRise = firstrisetime+secondrisetime ;\n      try {\n        doughProps.desiredDateTime = Date.parse(doughProps.desiredDate + ' ' + doughProps.desiredTime);\n      }\n      catch\n      {\n        doughProps.desiredDateTime = 0;\n      } \n      if (isNaN(doughProps.desiredDateTime))\n      {\n        doughProps.desiredDateTime = 0;\n      } \n      else\n      {\n         \n        doughProps.baketime = bakeTime(doughProps.breadType,doughProps.doughmass);\n        doughProps.roomstart =  (new Date(doughProps.desiredDateTime - doughProps.baketime - (2*doughProps.proofingtimes.inroom*(60*1000)))).toLocaleString();\n        doughProps.roomshape = (new Date(doughProps.desiredDateTime - doughProps.baketime -  (doughProps.proofingtimes.inroom*(60*1000)))).toLocaleString();\n        doughProps.fridgestart =  (new Date(doughProps.desiredDateTime - doughProps.baketime - (2*doughProps.proofingtimes.infridge*(60*1000)))).toLocaleString();\n        doughProps.fridgeshape =  (new Date(doughProps.desiredDateTime - doughProps.baketime -  (doughProps.proofingtimes.infridge*(60*1000)))).toLocaleString();\n        doughProps.roomplusfridgestart =  (new Date(doughProps.desiredDateTime - doughProps.baketime - ((doughProps.proofingtimes.infridge+doughProps.proofingtimes.inroom)*(60*1000)))).toLocaleString();\n        doughProps.roomplusfridgeshape = (new Date(doughProps.desiredDateTime - doughProps.baketime -  (doughProps.proofingtimes.inroom*(60*1000)))).toLocaleString();\n        doughProps.fridgeplusroomstart = doughProps.roomplusfridgestart; \n        doughProps.fridgeplusroomshape =  (new Date(doughProps.desiredDateTime - doughProps.baketime - (doughProps.proofingtimes.infridge*(60*1000)))).toLocaleString();\n\n\n      }\n      return doughProps;\n    }\n\n    \n\n     getValidationState = function() {\n      const theQuantity = this.state.quantity;\n      if (theQuantity < 1) return 'error';\n      else if (theQuantity > 5000) return 'error';\n      const theSize = this.state.size;\n      if (theSize < 1) return 'error';\n      else if (theSize > 5000) return 'error';\n      const theTemp = this.state.temperature;\n      if (theTemp < 1) return 'error';\n      else if (theTemp > 35) return 'error';\n      const theFridgeTemp = this.state.fridgetemperature;\n      if (theFridgeTemp < 1) return 'error';\n      else if (theFridgeTemp > 35) return 'error';      \n      const theStarterMass = this.state.startermass;\n      if (theStarterMass < 1) return 'error';\n      else if (theStarterMass > 50000) return 'error';      \n      const theDoughMass = this.state.doughmass;\n      if (theDoughMass < 1) return 'error';\n      else if (theDoughMass > 50000) return 'error';\n      else return 'success';      \n    }\n\n    handleChangesToDoughRiseTime(doughProps){\n      var newdoughmass; \n      if ( doughProps.breadType === \"pizza\"){\n        newdoughmass = pizzaMass( doughProps.size, doughProps.quantity, 'napoletana' ) ; \n      }\n      else\n      {\n        newdoughmass = doughProps.doughmass;\n      }\n      if (newdoughmass>1)\n      {\n        doughProps.doughmass = newdoughmass;  \n        var startermass = doughProps.startermass;\n        if (startermass> 0.5* newdoughmass ){\n          var newstartermass = 0.5* newdoughmass;\n          if (newstartermass>1)\n          {\n            doughProps.startermass = newstartermass;\n          }\n        }                \n        doughProps = this.calcTimeToRise(doughProps);\n      }\n      return doughProps;\n\n    }\n\n  \n    handleChange(value) {\n      var doughProps = this.state;\n      doughProps.quantity = value; \n      doughProps = this.handleChangesToDoughRiseTime(doughProps);\n      this.setState(doughProps);\n      \n\n    }\n    handleSizeChange(value) {\n      var doughProps = this.state;\n      doughProps.size = value; \n      doughProps = this.handleChangesToDoughRiseTime(doughProps);\n      this.setState(doughProps);\n\n    }\n    handleMassChange(value)\n    {\n      var doughProps = this.state;\n      doughProps.size = 9; \n      doughProps.quantity =  value/225;\n      doughProps.doughmass =  value;\n      doughProps = this.handleChangesToDoughRiseTime(doughProps);\n      this.setState(doughProps);\n\n\n    }\n    handleStarterChange(value) {\n      var doughProps = this.state;\n      doughProps.startermass = value;\n      doughProps = this.handleChangesToDoughRiseTime(doughProps);\n      this.setState(doughProps);\n    }\n    handleWantedTimeChange(e) {\n      var doughProps = this.state;\n      doughProps.desiredTime = e.target.value;\n      doughProps = this.handleChangesToDoughRiseTime(doughProps);\n      this.setState(doughProps);\n    }\n    handleWantedDateChange(e) {\n      var doughProps = this.state;\n      doughProps.desiredDate = e.target.value;\n      doughProps = this.handleChangesToDoughRiseTime(doughProps);\n      this.setState(doughProps);\n    }\n    handleFridgeChange(value) {\n      var doughProps = this.state;\n      doughProps.fridgetemperature = value;\n      doughProps = this.handleChangesToDoughRiseTime(doughProps);\n      this.setState(doughProps);\n    }\n    handleTempChange(value) {\n      var doughProps = this.state;\n      doughProps.temperature = value;\n      doughProps = this.handleChangesToDoughRiseTime(doughProps);\n      this.setState(doughProps);\n    }\n\n    render() {\n      const breadType = this.props.breadType;\n      const doughProps = this.state;\n      return(\n\n     <div>\n       <form className=\"form\">\n        \n        </form>\n        <form className=\"form\">\n            <FormGroup\n              controlId=\"formPizzaQantities\"\n              validationState={this.getValidationState()}>\n              { breadType===\"pizza\" ? <div> \n            \n              <ControlLabel>How Many Pizza&apos;s do you want?  {(this.state.breadType===\"pizza\")}</ControlLabel>\n              <InputRange \n              formatMinLabel={value => ` Min ${value} `}\n              formatMaxLabel={value => ` Max ${value} `}\n              step={1}\n              maxValue={15}\n              minValue={1}\n              value={this.state.quantity}\n              onChange={quantity => {this.setState({ quantity }); this.handleChange(quantity); }} \n              onChangeComplete={value => console.log(value)}\n              />\n\n              <HelpBlock>This has to be a number between 1 and 5000.</HelpBlock>\n              <ControlLabel>How big should they be</ControlLabel>\n              <InputRange \n              formatMinLabel={value => ` Min ${value} `}\n              formatMaxLabel={value => ` Max ${value} `}\n              step={1}\n              maxValue={11}\n              minValue={7}\n              value={this.state.size}\n              onChange={size => {this.setState({ size }); this.handleSizeChange(size); }} \n              onChangeComplete={value => console.log(value)}\n              />\n              <HelpBlock>This has to be a number between 7 and 18 inches.</HelpBlock> \n              </div>: \n              <div>\n                <ControlLabel>How large do you want your loaf?</ControlLabel>\n                <InputRange \n                formatLabel={value => `${value} g`}\n                formatMinLabel={value => `Min ${value} g`}\n                formatMaxLabel={value => `Max ${value} g`}\n\n              step={50}\n              maxValue={3000}\n              minValue={250}\n              value={this.state.doughmass}\n              onChange={doughmass => {this.setState({ doughmass }); this.handleMassChange(doughmass); }} \n              onChangeComplete={value => console.log(value)}\n              />\n\n              <FormControl\n                type=\"number\"\n                value={this.state.doughmass}\n                placeholder=\"Enter how large do you want your loaf\"\n                onChange={this.handleMassChange}\n                min=\"100\" max=\"5000\"\n                step=\"25\"\n              />\n              <FormControl.Feedback />\n              <HelpBlock>This has to be a number between 1 and 5000.</HelpBlock>\n            </div>\n            }\n\n              <div> This is total mass of dough we need {(this.state.size*this.state.size/81)*this.state.quantity*225}g</div>\n              <ControlLabel>How Much Starter do you have?</ControlLabel>\n              <InputRange \n              formatMinLabel={value => ` Min ${value} g`}\n              formatMaxLabel={value => ` Max ${value} g`}\n              step={1}\n              maxValue={this.state.doughmass/2}\n              minValue={0}\n              value={this.state.startermass}\n              onChange={startermass => {this.setState({ startermass }); this.handleStarterChange(startermass); }} \n              onChangeComplete={value => console.log(value)}\n              />\n              <FormControl\n                type=\"number\"\n                value={this.state.startermass}\n                placeholder=\"Enter how much starter mass you think we can use\"\n                onChange={this.handleStarterChange}\n                min=\"10\" max=\"5000\"\n                step=\"1\"\n              />\n              <FormControl.Feedback />\n              <HelpBlock>This has to be a number between 10 and 5000.</HelpBlock>\n\n\n              <ControlLabel>Which day do you want it</ControlLabel>\n              <FormControl\n                type=\"date\"\n                value={this.state.desiredDate}\n                placeholder=\"When do you want it ?\"\n                onChange={this.handleWantedDateChange}\n              />\n              <FormControl.Feedback />\n              <HelpBlock>This has to be a date .</HelpBlock>\n              <ControlLabel>When do you want it?</ControlLabel>\n              <FormControl\n                type=\"time\"\n                value={this.state.desiredTime}\n                placeholder=\"When do you want it ?\"\n                onChange={this.handleWantedTimeChange}\n              />\n              \n\n              <FormControl.Feedback />\n              <HelpBlock>This has to be a time .</HelpBlock>\n              <ControlLabel>How warm is the room?</ControlLabel>\n              <InputRange \n              formatMinLabel={value => ` Min ${value} g`}\n              formatMaxLabel={value => ` Max ${value} g`}\n              step={1}\n              maxValue={35}\n              minValue={0}\n              value={this.state.temperature}\n              onChange={temperature => {this.setState({ temperature }); this.handleTempChange(temperature); }} \n              onChangeComplete={value => console.log(value)}\n              />\n              <FormControl\n                type=\"number\"\n                value={this.state.temperature}\n                placeholder=\"Enter the room temp in Centigrade\"\n                onChange={this.handleTempChange}\n                min=\"4\" max=\"35\"\n                step=\"1\"\n              />\n              <FormControl.Feedback />\n              <HelpBlock>This has to be a number between 4 and 35.</HelpBlock>\n              <ControlLabel>How cold is the fridge?</ControlLabel>\n              \n              <InputRange \n              formatMinLabel={value => ` Min ${value} g`}\n              formatMaxLabel={value => ` Max ${value} g`}\n              step={1}\n              maxValue={35}\n              minValue={0}\n              value={this.state.fridgetemperature}\n              onChange={fridgetemperature => {this.setState({ fridgetemperature }); this.handleFridgeChange(fridgetemperature); }} \n              onChangeComplete={value => console.log(value)}\n              />\n              <FormControl\n                type=\"number\"\n                value={this.state.fridgetemperature}\n                placeholder=\"Enter how many you want\"\n                onChange={this.handleFridgeChange} \n                min=\"4\" max=\"35\"\n                step=\"1\"\n              />\n              <FormControl.Feedback />\n              <HelpBlock>This has to be a number between 4 and 35.</HelpBlock>\n\n\n\n            </FormGroup>\n            <DisplayQuantitiesTimesTab fridgeplusroomshape={this.state.fridgeplusroomshape} roomplusfridgeshape={this.state.roomplusfridgeshape}  doughmass={this.state.doughmass} startermass={this.state.startermass} baketime={this.state.baketime} breadType={this.state.breadType} infridge={this.state.proofingtimes.infridge} fridgestart={this.state.fridgestart} fridgeshape={this.state.fridgeshape} roomshape={this.state.roomshape} roomstart={this.state.roomstart} inroom={this.state.proofingtimes.inroom} roomplusfridgestart={this.state.roomplusfridgestart} fridgeplusroomstart={this.state.fridgeplusroomstart} />\n      \n          </form>\n      </div>);\n      }  \n    }\n  \n  \n  export default QuantitiesAndTimes;"]},"metadata":{},"sourceType":"module"}