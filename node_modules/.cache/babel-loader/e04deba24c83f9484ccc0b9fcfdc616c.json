{"ast":null,"code":"import _classCallCheck from \"/home/garethjscoleman/bread pizza/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/garethjscoleman/bread pizza/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/garethjscoleman/bread pizza/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/garethjscoleman/bread pizza/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/garethjscoleman/bread pizza/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/garethjscoleman/bread pizza/src/Components/displayQuantitiesAndTimes/displayQuantititesAndTimes.js\";\nimport React, { Component } from 'react';\n\nvar DisplayQuantitiesAndTimes =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DisplayQuantitiesAndTimes, _React$Component);\n\n  function DisplayQuantitiesAndTimes(props, context) {\n    _classCallCheck(this, DisplayQuantitiesAndTimes);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DisplayQuantitiesAndTimes).call(this, props, context));\n  }\n\n  _createClass(DisplayQuantitiesAndTimes, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, \"Approx \", Math.round(this.props.baketime / 60000), \" for \", this.props.breadType, \" minutes of this size \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }), \"Time of \", this.props.location[0], \" rise is:  \", this.props.time[0], \" mins.(that is about \", Math.round(this.props.time[0] / 6) / 10, \" hours )\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }), this.props.location.length > 1 ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Time of \", this.props.location[1], \" rise is:  \", this.props.time[1], \" mins.(that is about \", Math.round(this.props.time[1] / 6) / 10, \" hours )\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      })) : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }), \"Start at \", this.props.interfere[0], \"  in \", this.props.location[0], this.props.time.length > 1 ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }), \" , then move to  \", this.props.location[1], \" at \", this.props.interfere[1], \"   \") : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \" \"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }), \"Do a shape around \", this.props.interfere[1], \" to achieve the desired rise in the \", this.props.title, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return DisplayQuantitiesAndTimes;\n}(React.Component);\n\nexport default DisplayQuantitiesAndTimes;","map":{"version":3,"sources":["/home/garethjscoleman/bread pizza/src/Components/displayQuantitiesAndTimes/displayQuantititesAndTimes.js"],"names":["React","Component","DisplayQuantitiesAndTimes","props","context","Math","round","baketime","breadType","location","time","length","interfere","title"],"mappings":";;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,yB;;;;;AACJ,qCAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,kGACpBD,KADoB,EACbC,OADa;AAG3B;;;;6BACU;AAGP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACaC,IAAI,CAACC,KAAL,CAAW,KAAKH,KAAL,CAAWI,QAAX,GAAoB,KAA/B,CADb,WAC2D,KAAKJ,KAAL,CAAWK,SADtE,4BACuG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADvG,cAEgB,KAAKL,KAAL,CAAWM,QAAX,CAAoB,CAApB,CAFhB,iBAEqD,KAAKN,KAAL,CAAWO,IAAX,CAAgB,CAAhB,CAFrD,2BAEgGL,IAAI,CAACC,KAAL,CAAW,KAAKH,KAAL,CAAWO,IAAX,CAAgB,CAAhB,IAAmB,CAA9B,IAAiC,EAFjI,cAE6I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAF7I,EAGO,KAAKP,KAAL,CAAWM,QAAX,CAAoBE,MAApB,GAA2B,CAA3B,GACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAe,KAAKR,KAAL,CAAWM,QAAX,CAAoB,CAApB,CAAf,iBAAoD,KAAKN,KAAL,CAAWO,IAAX,CAAgB,CAAhB,CAApD,2BAA+FL,IAAI,CAACC,KAAL,CAAW,KAAKH,KAAL,CAAWO,IAAX,CAAgB,CAAhB,IAAmB,CAA9B,IAAiC,EAAhI,cAA4I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA5I,CADG,GACwJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJ/J,eAKiB,KAAKP,KAAL,CAAWS,SAAX,CAAqB,CAArB,CALjB,WAKiD,KAAKT,KAAL,CAAWM,QAAX,CAAoB,CAApB,CALjD,EAMO,KAAKN,KAAL,CAAWO,IAAX,CAAgBC,MAAhB,GAAuB,CAAvB,GAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN,uBAA8B,KAAKR,KAAL,CAAWM,QAAX,CAAoB,CAApB,CAA9B,UAA4D,KAAKN,KAAL,CAAWS,SAAX,CAAqB,CAArB,CAA5D,QAA3B,GAA4H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANnI,OAMoJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANpJ,wBAO2B,KAAKT,KAAL,CAAWS,SAAX,CAAqB,CAArB,CAP3B,0CAO0F,KAAKT,KAAL,CAAWU,KAPrG,EAO4G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAP5G,CADF;AAWD;;;;EAnBmCb,KAAK,CAACC,S;;AAsB5C,eAAeC,yBAAf","sourcesContent":["\nimport React, { Component } from 'react';\n\nclass DisplayQuantitiesAndTimes extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n  }\n    render() {\n\n\n      return (\n        <div>\n            Approx {(Math.round(this.props.baketime/60000))} for {(this.props.breadType)} minutes of this size <br/>\n              Time of {(this.props.location[0])} rise is:  {(this.props.time[0])} mins.(that is about {(Math.round(this.props.time[0]/6)/10)} hours )<br/>\n              {this.props.location.length>1? \n            <div>Time of {(this.props.location[1])} rise is:  {(this.props.time[1])} mins.(that is about {(Math.round(this.props.time[1]/6)/10)} hours )<br/ ></div> : <span/> }\n              Start at {(this.props.interfere[0])}  in {(this.props.location[0])}\n              {this.props.time.length>1 ? <span><br/> , then move to  {(this.props.location[1])} at {(this.props.interfere[1])}   </span> :<span> </span> } <br/>          \n               Do a shape around {(this.props.interfere[1])} to achieve the desired rise in the {(this.props.title)}<br/>\n        </div>\n      );\n    }\n  }\n\n  export default DisplayQuantitiesAndTimes;"]},"metadata":{},"sourceType":"module"}