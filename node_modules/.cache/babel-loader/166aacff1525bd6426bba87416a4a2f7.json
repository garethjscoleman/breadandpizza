{"ast":null,"code":"import _classCallCheck from \"/home/garethjscoleman/bread pizza/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/garethjscoleman/bread pizza/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/garethjscoleman/bread pizza/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/garethjscoleman/bread pizza/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/garethjscoleman/bread pizza/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/garethjscoleman/bread pizza/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/garethjscoleman/bread pizza/src/Components/doughHydration/doughHydration.js\";\nimport React, { Component } from 'react';\n\nvar DoughHydration =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DoughHydration, _React$Component);\n\n  function DoughHydration(props, context) {\n    var _this;\n\n    _classCallCheck(this, DoughHydration);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DoughHydration).call(this, props, context));\n    _this.updateHydration = _this.updateHydration.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateHydrationRate = _this.updateHydrationRate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    var flourTypes = ['DovesWhiteBread', 'DovesBrownBread', 'AllPurpose', 'FrenchT55', 'FrenchT65', 'FrenchT65_mixed_with_DovesWhiteBread', 'Type00Pasta'];\n    _this.state = {\n      flourType: 'DovesWhiteBread',\n      hydration: 67,\n      watermass: 61,\n      flourmass: 89\n    };\n\n    _this.updateHydrationRate();\n\n    return _this;\n  }\n\n  _createClass(DoughHydration, [{\n    key: \"updateHydrationRate\",\n    value: function updateHydrationRate() {\n      var theState = this.state;\n\n      switch (this.props.breadType) {\n        case 'pizza':\n          theState.flourType = 'DovesWhiteBread';\n          theState.hydration = 67;\n          break;\n\n        case 'baguette':\n          theState.flourType = 'FrenchT65_mixed_with_DovesWhiteBread';\n          theState.hydration = 72;\n          break;\n\n        default:\n          theState.flourType = 'Type00Pasta';\n          theState.hydration = 68;\n      }\n\n      this.setState(theState);\n      this.updateHydration();\n    }\n  }, {\n    key: \"updateHydration\",\n    value: function updateHydration() {\n      var thestate = this.state;\n      var remainingMass = this.props.doughmass - this.props.startermass;\n      thestate.watermass = Math.round(remainingMass * thestate.hydration / (100 + thestate.hydration));\n      thestate.flourmass = remainingMass - thestate.watermass;\n      this.setState(thestate);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateHydrationRate();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevprops) {\n      if (this.props.breadType !== prevprops.breadType) {\n        this.updateHydratationRate();\n      }\n\n      if (this.props.doughmass !== prevprops.doughmass || this.props.startermass !== prevprops.startermass) {\n        this.updateHydration();\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.updateHydration();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Quantities\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Mass of starter is \", this.props.startermass, \" g\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Remaining mass\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \" Flour Type  \", this.state.flourType), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \" Using Hydration  \", this.state.hydration), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \" Mass to add to starter \", this.props.doughmass - this.props.startermass), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Made up of \"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \" Flour Mass  \", this.state.flourmass), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \" Water Mass  \", this.state.watermass), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return DoughHydration;\n}(React.Component);\n\nexport default DoughHydration;","map":{"version":3,"sources":["/home/garethjscoleman/bread pizza/src/Components/doughHydration/doughHydration.js"],"names":["React","Component","DoughHydration","props","context","updateHydration","bind","updateHydrationRate","flourTypes","state","flourType","hydration","watermass","flourmass","theState","breadType","setState","thestate","remainingMass","doughmass","startermass","Math","round","prevprops","updateHydratationRate","e"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAGMC,c;;;;;AACJ,0BAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA;;AAC1B,wFAAMD,KAAN,EAAaC,OAAb;AAEA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBC,IAArB,uDAAvB;AACA,UAAKC,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBD,IAAzB,uDAA3B;AAGA,QAAIE,UAAU,GAAG,CACf,iBADe,EAEf,iBAFe,EAGf,YAHe,EAIf,WAJe,EAKf,WALe,EAMf,sCANe,EAOf,aAPe,CAAjB;AAaA,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,iBADA;AAEXC,MAAAA,SAAS,EAAE,EAFA;AAGXC,MAAAA,SAAS,EAAE,EAHA;AAIXC,MAAAA,SAAS,EAAE;AAJA,KAAb;;AAMA,UAAKN,mBAAL;;AA1B0B;AA4B3B;;;;0CACqB;AACpB,UAAIO,QAAQ,GAAG,KAAKL,KAApB;;AAEA,cAAQ,KAAKN,KAAL,CAAWY,SAAnB;AACE,aAAK,OAAL;AACED,UAAAA,QAAQ,CAACJ,SAAT,GAAqB,iBAArB;AACAI,UAAAA,QAAQ,CAACH,SAAT,GAAqB,EAArB;AACA;;AACF,aAAK,UAAL;AACEG,UAAAA,QAAQ,CAACJ,SAAT,GAAqB,sCAArB;AACAI,UAAAA,QAAQ,CAACH,SAAT,GAAqB,EAArB;AACA;;AACF;AACEG,UAAAA,QAAQ,CAACJ,SAAT,GAAqB,aAArB;AACAI,UAAAA,QAAQ,CAACH,SAAT,GAAqB,EAArB;AAXJ;;AAaA,WAAKK,QAAL,CAAcF,QAAd;AACA,WAAKT,eAAL;AAED;;;sCAEiB;AAChB,UAAIY,QAAQ,GAAG,KAAKR,KAApB;AACA,UAAIS,aAAa,GAAG,KAAKf,KAAL,CAAWgB,SAAX,GAAuB,KAAKhB,KAAL,CAAWiB,WAAtD;AACAH,MAAAA,QAAQ,CAACL,SAAT,GAAqBS,IAAI,CAACC,KAAL,CAAWJ,aAAa,GAAGD,QAAQ,CAACN,SAAzB,IAAsC,MAAMM,QAAQ,CAACN,SAArD,CAAX,CAArB;AACAM,MAAAA,QAAQ,CAACJ,SAAT,GAAqBK,aAAa,GAAGD,QAAQ,CAACL,SAA9C;AACA,WAAKI,QAAL,CAAcC,QAAd;AAGD;;;wCAGmB;AAClB,WAAKV,mBAAL;AACD;;;uCAEkBgB,S,EAAW;AAC5B,UAAI,KAAKpB,KAAL,CAAWY,SAAX,KAAyBQ,SAAS,CAACR,SAAvC,EAAkD;AAChD,aAAKS,qBAAL;AACD;;AAED,UAAI,KAAKrB,KAAL,CAAWgB,SAAX,KAAyBI,SAAS,CAACJ,SAAnC,IAAgD,KAAKhB,KAAL,CAAWiB,WAAX,KAA2BG,SAAS,CAACH,WAAzF,EAAsG;AACpG,aAAKf,eAAL;AACD;AACF;;;iCAIYoB,C,EAAG;AAEd,WAAKpB,eAAL;AAED;;;6BAEQ;AACP,aAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA2B,KAAKF,KAAL,CAAWiB,WAAtC,OAHH,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAqB,KAAKX,KAAL,CAAWC,SAAhC,CARF,EASS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATT,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA0B,KAAKD,KAAL,CAAWE,SAArC,CAVF,EAWS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXT,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAgC,KAAKR,KAAL,CAAWgB,SAAX,GAAuB,KAAKhB,KAAL,CAAWiB,WAAlE,CAZF,EAaS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbT,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAdF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAqB,KAAKX,KAAL,CAAWI,SAAhC,CAfF,EAgBS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBT,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAqB,KAAKJ,KAAL,CAAWG,SAAhC,CAjBF,EAkBS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBT,CAFF;AAuBD;;;;EA5G0BZ,KAAK,CAACC,S;;AA+GnC,eAAeC,cAAf","sourcesContent":["import React, { Component } from 'react';\n\n\nclass DoughHydration extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.updateHydration = this.updateHydration.bind(this);\n    this.updateHydrationRate = this.updateHydrationRate.bind(this);\n\n\n    var flourTypes = [\n      'DovesWhiteBread',\n      'DovesBrownBread',\n      'AllPurpose',\n      'FrenchT55',\n      'FrenchT65',\n      'FrenchT65_mixed_with_DovesWhiteBread',\n      'Type00Pasta'\n    ];\n\n\n\n\n    this.state = {\n      flourType: 'DovesWhiteBread',\n      hydration: 67,\n      watermass: 61,\n      flourmass: 89\n    };\n    this.updateHydrationRate();\n\n  }\n  updateHydrationRate() {\n    var theState = this.state;\n\n    switch (this.props.breadType) {\n      case 'pizza':\n        theState.flourType = 'DovesWhiteBread';\n        theState.hydration = 67;\n        break;\n      case 'baguette':\n        theState.flourType = 'FrenchT65_mixed_with_DovesWhiteBread';\n        theState.hydration = 72;\n        break;\n      default:\n        theState.flourType = 'Type00Pasta';\n        theState.hydration = 68;\n    }\n    this.setState(theState);\n    this.updateHydration();\n\n  }\n\n  updateHydration() {\n    var thestate = this.state;\n    var remainingMass = this.props.doughmass - this.props.startermass;\n    thestate.watermass = Math.round(remainingMass * thestate.hydration / (100 + thestate.hydration));\n    thestate.flourmass = remainingMass - thestate.watermass;\n    this.setState(thestate);\n\n\n  }\n\n\n  componentDidMount() {\n    this.updateHydrationRate();\n  }\n\n  componentDidUpdate(prevprops) {\n    if (this.props.breadType !== prevprops.breadType) {\n      this.updateHydratationRate();\n    }\n\n    if (this.props.doughmass !== prevprops.doughmass || this.props.startermass !== prevprops.startermass) {\n      this.updateHydration();\n    }\n  }\n\n\n\n  handleChange(e) {\n\n    this.updateHydration();\n\n  }\n\n  render() {\n    return (\n\n      <div>\n        <h2>Quantities</h2>\n\n         <span>Mass of starter is {(this.props.startermass)} g</span>\n        <h3>Remaining mass</h3>\n\n\n\n        <span> Flour Type  {(this.state.flourType)}\n        </span><br />\n        <span> Using Hydration  {(this.state.hydration)}\n        </span><br />\n        <span> Mass to add to starter {(this.props.doughmass - this.props.startermass)}\n        </span><br />\n        <h2>Made up of </h2>\n        <span> Flour Mass  {(this.state.flourmass)}\n        </span><br />\n        <span> Water Mass  {(this.state.watermass)}\n        </span><br />\n      </div>\n    );\n  }\n}\n\nexport default DoughHydration;"]},"metadata":{},"sourceType":"module"}